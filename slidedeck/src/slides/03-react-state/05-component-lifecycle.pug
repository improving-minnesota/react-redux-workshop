section
  h2 Component Lifecycle
  ul
    li Mounting
    li Updating
    li Unmounting

section
  h2 Mounting
  p These methods are called when an instance of a component is being created and inserted into the DOM:
  ol
    li <span class="component red">constructor()</span>
    li <span class="component red">render()</span>
    li <span class="component red">componentDidMount()</span>

section
  script(type="text/plain", class="language-jsx").
    import React from 'react';
    import axios from 'axios';

    export default class TodoList extends React.Component {
      state = { 
        todos: [],
        loading: true 
      };

      async componentDidMount() {
        const { data: todos } = await axios.get('https://myapi.com/api/todos');
        this.setState({ todos, loading: false });
      }

      render() {
        const { todos, loading } = this.state;
        if(loading) {
          return <div>Loading...</div>
        }
        return (
          <ul>
            {todos.map(todo => <li key={todo.id}>{todo.description}</li>)}
          </ul>
        );
      }
    }

section
  h2 Updating:
  p An update can be caused by changes to props or state.
  ol
    li <span class="component red">shouldComponentUpdate()</span>
    li <span class="component red">render()</span>
    li <span class="component red">componentDidUpdate()</span>

section
  h2 Unmounting:
  p This method is called when an instance of a component is being destroyed and removed from the DOM:
  ol
    li <span class="component red">componentWillUnmount()</span>

section
  h2 Errors:
  p This method is called when the render() function or another lifecycle method throws an error
  ol
    li <span class="component red">componentDidCatch(error, stack)</span>

section
  h2 Gotchas
  ul
    li Mutating state in componentDidUpdate will yield an infinite loop
    li There are deprecated lifecycle methods (likely to be dropped in React v17)
    li Be sure you know when/how your components mount/unmount before using those methods for API calls
