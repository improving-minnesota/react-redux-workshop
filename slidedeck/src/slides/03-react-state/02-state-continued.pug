section
  h2 Initializing State
  script(type="text/plain", class="language-jsx").
    class Name extends React.Component {
      state = {
        name: 'Sterling Archer'
      };
    }

section
  h2.lower Updating State
  ul
    li contains data specific to the component that may change over time
    li should never be mutated directly, use <span class="component red">setState()</span> instead

section
  h2 Updating State
  h3 The right way
  script(type="text/plain", class="language-jsx").
    this.setState({
      name: 'Tim'
    });

  h3 The wrong way
  script(type="text/plain", class="language-jsx").
    this.state.name = 'Tim';

section
  h2.lower setState()
  ul
    li batches changes to <span class="component red">state</span>, tells React that the component and its children must be re-rendered
    li executes asynchronously, a callback may be provided that will execute on update

section
  script(type="text/plain", class="language-jsx").
    import React from 'react';
    import Lightbulb from './Lightbulb';

    export default class LightSwitch extends React.Component {
      state = { isOn: false };

      turnOff = () => {
        this.setState({ isOn: false });
      }

      turnOn = () =>  {
        this.setState({ isOn: true });
      }

      render() {
        const { isOn } = this.state;
        return (
          <div>
            <Lightbulb on={isOn} />
            <button onClick={this.turnOff}>Off</button>
            <button onClick={this.turnOn}>On</button>
          </div>
        );
      }
    }