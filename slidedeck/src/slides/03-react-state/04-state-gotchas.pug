section
  h2 State updates may be asynchronous
  video(
    autoplay,
    loop,
    muted,
    src="~./images/async-state.mp4",
  )

section
  h3 Light Switch Toggle
  script(type="text/plain", class="language-jsx").
    toggleSwitch = () =>  {
      //TODO
    }

    render() {
      const { isOn } = this.state
      return (
        <div>
          <Lightbulb on={isOn}/>
          <button onClick={this.toggleSwitch}>Toggle</button>
        </div>
      );
    }

section
  h3 Works sometimes
  script(type="text/plain", class="language-jsx").
    toggleSwitch = () => {
      this.setState({
        isOn: !this.state.isOn
      })
    }

  h3 Works always
  script(type="text/plain", class="language-jsx").
    toggleSwitch = () => {
      this.setState(previousState => ({
        isOn: !previousState.isOn
      }))
    }

  p Maybe a confusing picture will clear this up...

section
  h2 Async State Updates
  img(src="~./images/async-state-updates.png")

section
  h2 State updates are merged

section
  h3 Given this state initialization
  script(type="text/plain", class="language-jsx").
    state = {
      posts: ['First'],
      comments: ['No Comments']
    };

section
  h3 Merges with the existing state
  script(type="text/plain", class="language-jsx").
    this.setState({
      comments: ['Hello', 'Another one']
    });
  p yields
  script(type="text/plain", class="language-jsx").
    {
      posts: ['First'],
      comments: ['Hello', 'Another one']
    };